// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using aspnetcoreapp;

#nullable disable

namespace aspnetcoreapp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("aspnetcoreapp.Entidades.Ajustes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Domingo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DomingoFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DomingoInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("FSL")
                        .HasColumnType("int");

                    b.Property<int>("ISL")
                        .HasColumnType("int");

                    b.Property<bool>("Jueves")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JuevesFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("JuevesInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Lunes")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LunesFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LunesInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Martes")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MartesFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MartesInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Miercoles")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MiercolesFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MiercolesInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sabado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SabadoFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SabadoInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Viernes")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ViernesFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ViernesInicio")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ajustes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Domingo = false,
                            DomingoFinal = new DateTime(2024, 2, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DomingoInicio = new DateTime(2024, 2, 7, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            FSL = 5,
                            ISL = 1,
                            Jueves = true,
                            JuevesFinal = new DateTime(2024, 2, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            JuevesInicio = new DateTime(2024, 2, 7, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Lunes = true,
                            LunesFinal = new DateTime(2024, 2, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            LunesInicio = new DateTime(2024, 2, 7, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Martes = true,
                            MartesFinal = new DateTime(2024, 2, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            MartesInicio = new DateTime(2024, 2, 7, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Miercoles = true,
                            MiercolesFinal = new DateTime(2024, 2, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            MiercolesInicio = new DateTime(2024, 2, 7, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Sabado = false,
                            SabadoFinal = new DateTime(2024, 2, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            SabadoInicio = new DateTime(2024, 2, 7, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Viernes = true,
                            ViernesFinal = new DateTime(2024, 2, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            ViernesInicio = new DateTime(2024, 2, 7, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("aspnetcoreapp.Entidades.Empleados", b =>
                {
                    b.Property<string>("Contrasenia")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("HorasEstipuladas")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroEmpleado")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal>("PagoPorHora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Puesto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Contrasenia");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("aspnetcoreapp.Entidades.Movimientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DiaHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Movimiento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
